# vim:ft=ansible:

- hosts: virmac
  user: vagrant
  become: yes

  vars:
    - project_name: shield
      dbuser: vagrant
      repo: https://github.com/joserequenaidv/my-eoi.git
      prpath: /var/www/my-eoi/pysp/projects/{{ project_name }}
      venv: '{{ prpath }}/venv'
      app_path: '{{ prpath }}/{{ project_name }}'
      data: '{{ prpath }}/metahumans/dumpdata.json'
      templates: '{{ prpath }}/templates'

  tasks:

  # SYSTEM REQUIREMENTS

  - name: update apt-packages
    become: yes
    apt:
      update_cache: yes
    tags:
      - always

  - name: install required apt-packages
    become: yes
    apt:
      name:
        - git
        - python3
        - python3-pip
        - python3-venv
        - nginx
        - uwsgi
        - uwsgi-plugin-python3
        - ufw
      update_cache: yes
      state: present
    tags:
      - apt
      - sys-requirements

  # PROJECT CONFIGURATION

    # repository

  - name: download repository from GitHub and create project directory
    become: yes
    git:
      repo: '{{ repo }}'
      version: master
      dest: /var/www/my-eoi
      force: yes
    tags:
      - github

  - name: give owner privileges to nginx worker, www-data
    become: yes
    file:
      path: /var/www/my-eoi
      state: directory
      recurse: yes
      owner: www-data
      group: www-data
      mode: '0755'
    tags:
      - nginx

    # django requirements and commands

  - name: install project requirements
    become: yes
    pip:
      virtualenv: '{{ venv }}'
      requirements: '{{ prpath }}/requirements.txt'
      virtualenv_command: /usr/bin/python3 -m venv
    tags:
      - pip
      - virtualenv

  - name: collect static
    become: yes
    django_manage:
      command: collectstatic
    args:
      app_path: '{{ prpath }}'
      virtualenv: '{{ venv }}'
    tags:
      - django
      - deployment

  - name: make migrations
    become: yes
    django_manage:
      command: makemigrations
      app_path: '{{ prpath }}'
      virtualenv: '{{ venv }}'
    tags:
      - django
      - deployment

  - name: migrate
    become: yes
    django_manage:
      command: migrate
      app_path: '{{ prpath }}'
      virtualenv: '{{ venv }}'
    tags:
      - django
      - deployment

  - name: load data
    become: yes
    django_manage:
      command: loaddata
      fixtures: '{{ data }}'
      app_path: '{{ prpath }}'
      virtualenv: '{{ venv }}'
    tags:
      - django
      - deployment

  # UWSGI CONFIGURATION

    # folders

  - name: create vassals folder
    become: yes
    file:
      path: /etc/uwsgi/vassals
      state: directory
    tags:
      - uwsgi

  - name: create var/log/uwsgi directory
    become: yes
    file:
      path: /var/log/uwsgi
      state: directory
    tags:
      - uwsgi
      - logs

    # files

  - name: move emperor.ini to /etc/uwsgi
    become: yes
    copy:
      src: '{{ templates }}/emperor.ini'
      dest: /etc/uwsgi
    tags:
      - uwsgi

  - name: create shield.log in var/log/uwsgi directory and change privileges
    become: yes
    file:
      path: /var/log/uwsgi/shield.log
      state: touch
      mode: '0755'
      owner: www-data
    tags:
      - uwsgi
      - nginx
      - logs

    # symlink

  - name: create a symbolic link
    become: yes
    file:
      src: '{{ prpath }}/uwsgi.ini'
      dest: /etc/uwsgi/vassals/shield.ini
      state: link
    tags:
      - uwsgi
      - symlink

    # set service

  - name: set systemd and emperor's service
    become: yes
    copy:
      src: '{{ templates }}/uwsgi-emperor.service'
      dest: /etc/systemd/system
    tags:
      - uwsgi

  - name: start service
    become: yes
    systemd:
      enabled: yes
      state: started
      name: uwsgi-emperor.service
      daemon_reload: yes
    tags:
      - uwsgi

  # NGINX CONFIGURATION

    # files

  - name: remove nginx default website
    become: yes
    file:
      path: /etc/nginx/sites-enabled/default
      state: absent
    tags:
      - nginx

  - name: place shield.conf in /etc/nginx/sites-available
    become: yes
    copy:
      src: '{{ templates }}/shield.conf'
      dest: /etc/nginx/sites-available
    tags:
      - nginx

    # symlink

  - name: create a symbolic link
    become: yes
    file:
      src: /etc/nginx/sites-available/shield.conf
      dest: /etc/nginx/sites-enabled/shield.conf
      state: link
    tags:
      - nginx
      - symlink

    # restart

  - name: restart nginx
    become: yes
    systemd:
      name: nginx
      state: restarted
      enabled: yes
    tags:
      - nginx
